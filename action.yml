name: "APT Repo Management"
description: "Setup and manage APT repo, transferring it over SCP"
inputs:
  repo_supported_arch:
    description: "Newline-delimited list of supported architecture"
    required: true
  repo_supported_version:
    description: "Newline-delimited list of supported (linux) version"
    required: true
  file:
    description: "Newline-delimited list of .deb files"
    required: true
  public_key:
    description: "GPG public key for apt repo"
    required: false
  private_key:
    description: "GPG private key for signing apt repo"
    required: true
  key_passphrase:
    description: "Passphrase of GPG private key"
    required: false
  scp_hostname:
    description: "Hostname for the SCP server"
    required: true
  scp_port:
    description: "Port for the SCP server"
    required: false
    default: "22"
  apt_repo_private:
    description: "Path to the private key for SCP authentication"
    required: true
  remote_file_path:
    description: "Remote file path to transfer the .deb file"
    required: true
  debug:
    description: "Print debug log"
    required: false
  use_ssh_agent:
    description: "Enable SSH agent forwarding for SCP authentication"
    required: false
    default: "true"
runs:
  using: 'composite'
  steps:
    - uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ inputs.apt_repo_private }}
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ${{ github.action_path }}/requirements.txt
      shell: bash
    - name: Run the APT Repo Management script
      run: python ${{ github.action_path }}/entrypoint.py
      shell: bash
      env:
        INPUT_REPO_SUPPORTED_ARCH: ${{ inputs.repo_supported_arch }}
        INPUT_REPO_SUPPORTED_VERSION: ${{ inputs.repo_supported_version }}
        INPUT_FILE: ${{ inputs.file }}
        INPUT_PUBLIC_KEY: ${{ inputs.public_key }}
        INPUT_PRIVATE_KEY: ${{ inputs.private_key }}
        INPUT_KEY_PASSPHRASE: ${{ inputs.key_passphrase }}
        INPUT_SCP_HOSTNAME: ${{ inputs.scp_hostname }}
        INPUT_SCP_PORT: ${{ inputs.scp_port }}
        INPUT_REMOTE_FILE_PATH: ${{ inputs.remote_file_path }}
        INPUT_DEBUG: ${{ inputs.debug }}
        INPUT_USE_SSH_AGENT: ${{ inputs.use_ssh_agent }}
        SSH_AUTH_SOCK: ${{ env.SSH_AUTH_SOCK }}
branding:
  icon: "package"
  color: "green"
